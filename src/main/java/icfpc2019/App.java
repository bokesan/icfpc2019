/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package icfpc2019;

import icfpc2019.pathfinder.Pathfinder;
import icfpc2019.pathfinder.StarNode;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class App {

    public static void main(String[] args) throws IOException {
        if (args.length == 0) {
            System.err.println("usage: solver problem-file");
            System.exit(1);
        }

        String desc = readFile(args[0], StandardCharsets.UTF_8);
        ProblemDesc problem = ProblemDesc.of(desc);

        System.out.println("Problem description successfully read!");

        Grid grid = Grid.of(problem);

        System.out.println("Grid created!");

        //System.out.println(grid.toString());

        Pathfinder finder = new Pathfinder();
        finder.initNodes(grid);

        Robot robot = new Robot(problem.getInitialWorkerLocation());

        State state = new State(grid, robot, problem.getBoosters());

        while (!state.mapFinished()) {
            Point next = state.getNextPointToVisit();
            List<StarNode> starPath = finder.findPath(state.getCurrentPosition(), next);
            List<Point> path = pathFromStarNodes(starPath);
            state.move(path.get(0));
        }

        System.out.println("Wrapping finished!");
        System.out.println(state.getResult());
    }

    private static List<Point> pathFromStarNodes(List<StarNode> starPath) {
        List<Point> path = new ArrayList<>();
        for (StarNode star : starPath) {
            path.add(Point.of(star.getXPosition(), star.getYPosition()));
        }
        return path;
    }

    private static String readFile(String path, Charset encoding) throws IOException {
        byte[] encoded = Files.readAllBytes(Paths.get(path));
        return new String(encoded, encoding);
    }

    public String getGreeting() {
        return "Hi!";
    }
}
